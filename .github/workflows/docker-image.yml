name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build-and-push-vuejsui:

    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        include:
          - dockerfile: ui/Dockerfile
            image: ghcr.io/ingos11/vuejsui

    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: '16.x'
        cache: 'npm'
        cache-dependency-path: './ui/package-lock.json'
    - run: npm ci
      working-directory: ui
    - run: npm run build --if-present
      working-directory: ui

    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for vuejsui container from Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ${{ matrix.image }}

    - name: Build and Push the vuejsui image to registry
      uses: docker/build-push-action@v2
      with:
        context: ui/.
        file: ${{ matrix.dockerfile }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}


  build-and-push-flaskapp:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./Dockerfile
            image: ghcr.io/ingos11/flaskapp

    permissions:
      contents: read
      packages: write
        
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for python container from Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ${{ matrix.image }}

    - name: Build and Push the python image to registry
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ${{ matrix.dockerfile }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
